// Mocks generated by Mockito 5.4.4 from annotations
// in budgetbuddy/test/account_bar_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i3;

import 'package:budgetbuddy/components/appconfig.dart' as _i4;
import 'package:budgetbuddy/components/datadistributer.dart' as _i5;
import 'package:budgetbuddy/components/transactionfile.dart' as _i8;
import 'package:budgetbuddy/services/database_service.dart' as _i2;
import 'package:budgetbuddy/services/transaction.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabaseService_0 extends _i1.SmartFake
    implements _i2.DatabaseService {
  _FakeDatabaseService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_1 extends _i1.SmartFake implements _i3.File {
  _FakeFile_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppconfig_2 extends _i1.SmartFake implements _i4.Appconfig {
  _FakeAppconfig_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Datadistributer].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatadistributer extends _i1.Mock implements _i5.Datadistributer {
  MockDatadistributer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DatabaseService get dbs => (super.noSuchMethod(
        Invocation.getter(#dbs),
        returnValue: _FakeDatabaseService_0(
          this,
          Invocation.getter(#dbs),
        ),
      ) as _i2.DatabaseService);

  @override
  set dbs(_i2.DatabaseService? _dbs) => super.noSuchMethod(
        Invocation.setter(
          #dbs,
          _dbs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<List<_i7.TransactionObj>> get allTransactions =>
      (super.noSuchMethod(
        Invocation.getter(#allTransactions),
        returnValue:
            _i6.Future<List<_i7.TransactionObj>>.value(<_i7.TransactionObj>[]),
      ) as _i6.Future<List<_i7.TransactionObj>>);

  @override
  _i6.Future<List<String>> get allAccounts => (super.noSuchMethod(
        Invocation.getter(#allAccounts),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);

  @override
  _i6.Future<void> ensureInitialized() => (super.noSuchMethod(
        Invocation.method(
          #ensureInitialized,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> loadPipeline() => (super.noSuchMethod(
        Invocation.method(
          #loadPipeline,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> addTransactionFileToDatabase(_i8.TransactionFile? tfile) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTransactionFileToDatabase,
          [tfile],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> updateData(
    int? id,
    String? column,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateData,
          [
            id,
            column,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<String>> loadAccountList() => (super.noSuchMethod(
        Invocation.method(
          #loadAccountList,
          [],
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);

  @override
  _i6.Future<Map<String, double>> loadProfile() => (super.noSuchMethod(
        Invocation.method(
          #loadProfile,
          [],
        ),
        returnValue: _i6.Future<Map<String, double>>.value(<String, double>{}),
      ) as _i6.Future<Map<String, double>>);

  @override
  _i6.Future<Map<String, dynamic>> getTotalDateRange() => (super.noSuchMethod(
        Invocation.method(
          #getTotalDateRange,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}

/// A class which mocks [TransactionFile].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionFile extends _i1.Mock implements _i8.TransactionFile {
  MockTransactionFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.File get file => (super.noSuchMethod(
        Invocation.getter(#file),
        returnValue: _FakeFile_1(
          this,
          Invocation.getter(#file),
        ),
      ) as _i3.File);

  @override
  set file(_i3.File? _file) => super.noSuchMethod(
        Invocation.setter(
          #file,
          _file,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set headers(String? _headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          _headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<List<dynamic>> get csvData => (super.noSuchMethod(
        Invocation.getter(#csvData),
        returnValue: <List<dynamic>>[],
      ) as List<List<dynamic>>);

  @override
  set csvData(List<List<dynamic>>? _csvData) => super.noSuchMethod(
        Invocation.setter(
          #csvData,
          _csvData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.TransactionObj> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <_i7.TransactionObj>[],
      ) as List<_i7.TransactionObj>);

  @override
  set data(List<_i7.TransactionObj>? _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get account => (super.noSuchMethod(
        Invocation.getter(#account),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#account),
        ),
      ) as String);

  @override
  set account(String? _account) => super.noSuchMethod(
        Invocation.setter(
          #account,
          _account,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DatabaseService get dbs => (super.noSuchMethod(
        Invocation.getter(#dbs),
        returnValue: _FakeDatabaseService_0(
          this,
          Invocation.getter(#dbs),
        ),
      ) as _i2.DatabaseService);

  @override
  set dbs(_i2.DatabaseService? _dbs) => super.noSuchMethod(
        Invocation.setter(
          #dbs,
          _dbs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Appconfig get appconfig => (super.noSuchMethod(
        Invocation.getter(#appconfig),
        returnValue: _FakeAppconfig_2(
          this,
          Invocation.getter(#appconfig),
        ),
      ) as _i4.Appconfig);

  @override
  set appconfig(_i4.Appconfig? _appconfig) => super.noSuchMethod(
        Invocation.setter(
          #appconfig,
          _appconfig,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> identifyAccount() => (super.noSuchMethod(
        Invocation.method(
          #identifyAccount,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> readFile(_i3.File? file) => (super.noSuchMethod(
        Invocation.method(
          #readFile,
          [file],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  bool loadTransactionObjs() => (super.noSuchMethod(
        Invocation.method(
          #loadTransactionObjs,
          [],
        ),
        returnValue: false,
      ) as bool);
}
